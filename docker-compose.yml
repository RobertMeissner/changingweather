volumes:
  base-data:
  db-data:

services:
  db:
    image: postgres:15-alpine
    env_file:
      - .env
    restart: always
    ports:
      - '5431:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data

  backend:
    restart: always
    env_file:
      - .env
    build:
      context: ./backend
      dockerfile: ./Dockerfile
      args:
        env: ${ENV}
    ports:
      - "8666:8000"
    command: |
        bash -c "
        gunicorn src.main:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 --log-level=debug --timeout=60 --reload"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=0
    volumes:
      - base-data:/data
      - ./backend/src:/code/src
      - ./backend/tests:/code/tests
      - ./backend/alembic.ini:/code/alembic.ini
      - ./backend/logconfig.yml:/code/logconfig.yml
